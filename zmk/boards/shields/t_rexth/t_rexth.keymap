#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&lt {
  tapping-term-ms = <250>;
  quick-tap-ms = <200>;
  flavor = "balanced";
};

&mt {
  tapping-term-ms = <250>;
  quick-tap-ms = <200>;
  flavor = "tap-preferred";
};

#define str(s) #s

#define TMUX_MACRO(NAME, BINDING) \
  tm##NAME: macro_tm##NAME { \
    compatible = "zmk,behavior-macro"; \
    label = str(macro_tm##NAME); \
    #binding-cells = <0>; \
    bindings \
      = <&macro_press &kp LCTRL> \
      , <&macro_tap &kp A> \
      , <&macro_release &kp LCTRL> \
      , <&macro_tap &kp BINDING> \
      ; \
    };

#define TMUX_HOLD_TAP_MACRO(NAME, BINDING) \
  th##NAME: hold_tap_th##NAME { \
    compatible = "zmk,behavior-hold-tap"; \
    label = str(hold_tap_th##NAME); \
    #binding-cells = <2>; \
    tapping-term-ms = <250>; \
    quick-tap-ms = <200>; \
    flavor = "tap-preferred"; \
    bindings = <&kp>, <&BINDING>; \
  };

/ {
  macros {
    TMUX_MACRO(u, UP)
    TMUX_MACRO(d, DOWN)
    TMUX_MACRO(l, LEFT)
    TMUX_MACRO(r, RIGHT)
    TMUX_MACRO(p, P)
    TMUX_MACRO(n, N)
  };

  behaviors {
    TMUX_HOLD_TAP_MACRO(u, tmu)
    TMUX_HOLD_TAP_MACRO(d, tmd)
    TMUX_HOLD_TAP_MACRO(l, tml)
    TMUX_HOLD_TAP_MACRO(r, tmr)
    TMUX_HOLD_TAP_MACRO(p, tmp)
    TMUX_HOLD_TAP_MACRO(n, tmn)
  };

  keymap {
    compatible = "zmk,keymap";

    qwerty {
    bindings = <
                &kp W         &kp E         &kp R          &kp T           &kp Y      &kp U           &kp I          &kp O
      &lt 3 A   &mt LGUI S    &mt LALT D    &mt LCTRL F    &kp G           &kp H      &mt LCTRL J     &mt LALT K     &mt LGUI L      &lt 3 P
      &kp Z     &kp X         &kp C         &kp V          &kp B           &kp N      &kp M           &kp Q          &kp TAB         &kp ENTER
                                                           &kp LSHIFT      &lt 2 SPACE
    >;
    };

    colemak-dh {
    bindings = <
                &kp W         &kp F         &kp P          &kp B           &kp J      &kp L           &kp U          &kp Y
      &lt 3 A   &mt LGUI R    &mt LALT S    &mt LCTRL T    &kp G           &kp M      &mt LCTRL N     &mt LALT E     &mt LGUI I      &lt 3 O
      &kp Z     &kp X         &kp C         &kp D          &kp V           &kp K      &kp H           &kp Q          &kp TAB         &kp ENTER
                                                           &kp LSHIFT      &lt 2 SPACE
    >;
    };

    sym {
    bindings = <
                &kp N7        &kp N8        &kp N9         &none           &none      &kp ESC         &kp GRAVE      &kp APOS
      &kp 0     &mt LGUI N4   &mt LALT N5   &mt LCTRL N6   &kp MINUS       &kp LBKT   &mt LCTRL RBKT  &mt LALT BSPC  &mt LGUI SEMI   &kp 0
      &none     &kp N1        &kp N2        &kp N3         &kp EQUAL       &none      &kp BSLH        &kp COMMA      &kp DOT         &kp SLASH
                                                           &kp LSHIFT      &trans
    >;
    };

    nav {
    bindings = <
                &kp HOME      &kp UP        &kp END        &kp INS         &none      &thp            &thu           &thn
      &trans    &kp LEFT      &kp DOWN      &kp RIGHT      &kp DEL         &none      &thl LCTRL 0    &thd LALT 0    &thr LGUI 0     &trans
      &none     &none         &to 1         &to 0          &none           &none      &none           &none          &none           &none
                                                           &kp LSHIFT      &none
    >;
    };
  };
};
